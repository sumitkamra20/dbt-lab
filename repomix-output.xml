This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.cursor/
  mcp.json
dbt_101/
  .cursor/
    mcp.json
  models/
    01_staging/
      src_grocery_store.yml
      stg_customers.sql
      stg_order_items.sql
      stg_orders.sql
      stg_products.sql
  .gitignore
  dbt_project.yml
  README.md
README.md
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".cursor/mcp.json">
{
  "mcpServers": {
    "datapilot": {
      "url": "http://localhost:7700/sse",
      "type": "sse"
    }
  }
}
</file>

<file path="dbt_101/.cursor/mcp.json">
{
  "mcpServers": {
    "datapilot": {}
  }
}
</file>

<file path="dbt_101/models/01_staging/src_grocery_store.yml">
version: 2

sources:
  - name: grocery_store
    description: "Raw data from the store's CRM system containing data."
    database: DBT_SUMIT
    schema: RAW
    tables:
      - name: customers
        description: "Raw data containing customer details."
        columns:
          - name: id
            description: "A unique identifier for each customer."
          - name: first_name
            description: "The first name of the customer."
          - name: last_name
            description: "The last name of the customer."
          - name: email
            description: "The email address provided by the customer."
          - name: gender
            description: "The gender indicated by the customer."
          - name: date_of_birth
            description: "The date of birth as indicated by the customer."

      - name: orders
        description: "Raw data containing details about the store's orders, such as order date, customer_id and status."
        columns:
          - name: id
            description: "A unique identifier for each order."
          - name: date
            description: "The date the order was placed on."
          - name: customer_id
            description: "The ID of the customer who placed the order. Foreign key to CUSTOMERS."
          - name: status
            description: "The last known status of the order."

      - name: order_items
        description: "Raw data about the items in each order."
        columns:
          - name: order_id
            description: "The ID of the order that the item belongs to. Foreign key to ORDERS."
          - name: order_item_id
            description: "The ID of the item within the current order."
          - name: product_id
            description: "The ID of the product that the order item corresponds to. Foreign key to PRODUCTS."
          - name: quantity
            description: "The number of units of the product bought within the current order."

      - name: products
        description: "Raw data about the products offered by the store."
        columns:
          - name: id
            description: "A unique identifier for each product."
          - name: name
            description: "The name of the product."
          - name: price
            description: "The price of the product."
          - name: category
            description: "The category of the product."
</file>

<file path="dbt_101/models/01_staging/stg_customers.sql">
select
    id,
    first_name,
    last_name,
    email,
    gender,
    cast(date_of_birth as date) as date_of_birth
from {{ source('grocery_store', 'customers') }}
</file>

<file path="dbt_101/models/01_staging/stg_order_items.sql">
select
    order_id,
    order_item_id,
    product_id,
    cast(quantity as integer) as quantity
from {{ source('grocery_store', 'order_items') }}
</file>

<file path="dbt_101/models/01_staging/stg_orders.sql">
select
    id,
    cast(date as date) as date,
    customer_id,
    status
from {{ source('grocery_store', 'orders') }}
</file>

<file path="dbt_101/models/01_staging/stg_products.sql">
select
    id,
    name,
    cast(price as numeric(10, 2)) as price,
    category
from {{ source('grocery_store', 'products') }}
</file>

<file path="dbt_101/.gitignore">
target/
dbt_packages/
logs/
</file>

<file path="dbt_101/dbt_project.yml">
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_101'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_101'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"
</file>

<file path="dbt_101/README.md">
Welcome to your new dbt project!

### Using the starter project

Try running the following commands:
- dbt run
- dbt test


### Resources:
- Learn more about dbt [in the docs](https://docs.getdbt.com/docs/introduction)
- Check out [Discourse](https://discourse.getdbt.com/) for commonly asked questions and answers
- Join the [chat](https://community.getdbt.com/) on Slack for live discussions and support
- Find [dbt events](https://events.getdbt.com) near you
- Check out [the blog](https://blog.getdbt.com/) for the latest news on dbt's development and best practices
</file>

<file path="README.md">
# dbt-lab
</file>

</files>
